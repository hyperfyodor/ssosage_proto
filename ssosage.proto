syntax = "proto3";

option go_package = "github.com/hyperfyodor/ssosage_proto";
package ssosage_proto;

service Ssosage {

    // client and app names must be unique
   
    // registers new app - stores app name, secret and roles, if it already exists returns an error
    rpc RegisterApp(RegisterAppRequest) returns (RegisterAppResponse);

    // registers new client - stores client name and pass hash, if it already exists returns an error
    rpc RegisterClient(RegisterClientRequest) returns (RegisterClientResponse);

    // generates token for a specific app - token contains client name
    rpc GenerateToken(GenerateTokenRequest) returns (GenerateTokenResponse);
}

message RegisterAppRequest {
    string app_name = 1;
    string app_secret = 2;
    repeated string roles = 3;
}

message RegisterAppResponse { // for now responses are empty, we will use ids internally
}

message RegisterClientRequest {
    string client_name = 1;
    string password = 2;
}

message RegisterClientResponse {
}

message GenerateTokenRequest {
    string client_name = 1;
    string password = 2;
    string app_name = 3;
    string role = 4;
}

message GenerateTokenResponse {
    string token = 1;
}